.list {
  list-style: none;
  display: flex;
  gap: 2.4rem;
  align-items: center;
}

.list li {
  font-size: var(--font-primary);
}

/* .list a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  transition: all 0.2s;
}

a.action,
.list a:hover {
   because color property is clashing for the same selection ,I chained the element selector
  a with th class selector
  
  color: var(--color-secondary);
} */

.list a:link,
.list a:visited {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
  transition: all 0.2s;
}

.listItem a.action,
.list a:hover,
.list a:active {
  /* this selects both hover and the active link */
  /*because the action class link will have a lesser specificity with the link:link style, I used the chain to increase the specificity

  in addition assuming the pseudo selectors like :visited and co is not added to the link, then using a second parent class before the chain wont be necessary
  */
  color: var(--color-secondary);
}

.listItem a.cta {
  border-radius: var(--radius-primary);
  background-color: var(--color-primary-light);
  padding: var(--padding-secondary);
  color: var(--color-white-brand);
}
.listItem a.cta:hover {
  color: var(--color-secondary);
}

.logout {
  border: none;
  color: inherit;
  background: none;
  font-size: inherit;
  cursor: pointer;
  font-weight: 500;
}

@media only screen and (max-width: 65em) {
  /* … */
}
@media only screen and (max-width: 52em) {
  .list {
    display: none;
  }
  /* … */
}
@media only screen and (max-width: 32em) {
  /* … */
}
@media only screen and (max-width: 22em) {
  /* … */
}
